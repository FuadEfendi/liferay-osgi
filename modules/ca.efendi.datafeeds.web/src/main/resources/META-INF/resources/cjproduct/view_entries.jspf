<%@ page import="ca.efendi.datafeeds.service.CJProductLocalServiceUtil" %>

<%@ page import="ca.efendi.datafeeds.service.permission.DatafeedsRootPermission" %>
<%@ page import="ca.efendi.datafeeds.model.CJProduct" %>

<c:if test="<%= DatafeedsRootPermission.contains(permissionChecker, scopeGroupId, ActionKeys.ADD_ENTRY) %>">
	<div class="button-holder">
		<portlet:renderURL var="editEntryURL" windowState="<%= WindowState.MAXIMIZED.toString() %>">
			<portlet:param name="mvcRenderCommandName" value="/blogs/edit_entry" />
			<portlet:param name="redirect" value="<%= currentURL %>" />
		</portlet:renderURL>

		<aui:button href="<%= editEntryURL %>" icon="icon-plus" value="add-blog-entry" />
	</div>
</c:if>

<div class="subscribe">
	<c:if test="<%= blogsGroupServiceOverriddenConfiguration.enableRss() %>">
		<liferay-ui:rss
			delta="<%= GetterUtil.getInteger(blogsGroupServiceOverriddenConfiguration.rssDelta()) %>"
			displayStyle="<%= blogsGroupServiceOverriddenConfiguration.rssDisplayStyle() %>"
			feedType="<%= blogsGroupServiceOverriddenConfiguration.rssFeedType() %>"
			url='<%= themeDisplay.getPathMain() + "/blogs/rss" %>'
		/>
	</c:if>

	<c:if test="<%= BlogsPermission.contains(permissionChecker, scopeGroupId, ActionKeys.SUBSCRIBE) && (blogsGroupServiceSettings.isEmailEntryAddedEnabled() || blogsGroupServiceSettings.isEmailEntryUpdatedEnabled()) %>">
		<c:choose>
			<c:when test="<%= SubscriptionLocalServiceUtil.isSubscribed(company.getCompanyId(), user.getUserId(), CJProduct.class.getName(), scopeGroupId) %>">
				<portlet:actionURL name="/blogs/edit_entry" var="unsubscribeURL">
					<portlet:param name="<%= Constants.CMD %>" value="<%= Constants.UNSUBSCRIBE %>" />
					<portlet:param name="redirect" value="<%= currentURL %>" />
				</portlet:actionURL>

				<liferay-ui:icon
					iconCssClass="icon-remove-sign"
					label="<%= true %>"
					message="unsubscribe"
					url="<%= unsubscribeURL %>"
				/>
			</c:when>
			<c:otherwise>
				<portlet:actionURL name="/blogs/edit_entry" var="subscribeURL">
					<portlet:param name="<%= Constants.CMD %>" value="<%= Constants.SUBSCRIBE %>" />
					<portlet:param name="redirect" value="<%= currentURL %>" />
				</portlet:actionURL>

				<liferay-ui:icon
					iconCssClass="icon-ok-sign"
					label="<%= true %>"
					message="subscribe"
					url="<%= subscribeURL %>"
				/>
			</c:otherwise>
		</c:choose>
	</c:if>
</div>

<liferay-ui:categorization-filter
	assetType="entries"
	portletURL="<%= portletURL %>"
/>

<%
Map<String, Object> contextObjects = new HashMap<String, Object>();

contextObjects.put("blogsPortletInstanceConfiguration", blogsPortletInstanceConfiguration);
contextObjects.put("blogsPortletInstanceSettingsHelper", blogsPortletInstanceSettingsHelper);
%>

<liferay-ddm:template-renderer className="<%= CJProduct.class.getName() %>" contextObjects="<%= contextObjects %>" displayStyle="<%= blogsPortletInstanceConfiguration.displayStyle() %>" displayStyleGroupId="<%= blogsPortletInstanceSettingsHelper.getDisplayStyleGroupId() %>" entries="<%= _convertToBlogEntries(results) %>">

	<%
	int index = 0;

	for (Object result : results) {
		CJProduct entry = null;

		AssetEntry assetEntry = null;

		if (result instanceof AssetEntry) {
			assetEntry = (AssetEntry)result;

			entry = CJProductLocalServiceUtil.getCJProduct(assetEntry.getClassPK());

			AssetUtil.addLayoutTags(request, assetEntry.getTags());
		}
		else {
			entry = (CJProduct)result;
		}

		index++;

		request.setAttribute("view_entry_content.jsp-searchContainer", searchContainer);

		request.setAttribute("view_entry_content.jsp-entry", entry);

		request.setAttribute("view_entry_content.jsp-assetEntry", assetEntry);
	%>

		<liferay-util:include page="/cjproduct/view_entry_content.jsp" servletContext="<%= application %>" />

		<div class="separator"><!-- --></div>

	<%
	}
	%>

</liferay-ddm:template-renderer>

<liferay-ui:search-paginator searchContainer="<%= searchContainer %>" />

<%!
private List<CJProduct> _convertToBlogEntries(List results) throws PortalException, SystemException {
	if (results.isEmpty() || (results.get(0) instanceof CJProduct)) {
		return results;
	}

	List<CJProduct> entries = new ArrayList<CJProduct>(results.size());

	for (Object result : results) {
		AssetEntry assetEntry = (AssetEntry)result;

		CJProduct entry = CJProductLocalServiceUtil.getCJProduct(assetEntry.getClassPK());

		entries.add(entry);
	}

	return entries;
}
%>